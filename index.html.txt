<!DOCTYPE html> 
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Comparador de Horarios</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    * {
      box-sizing: border-box;
    }

    body {
      margin: 0;
      font-family: 'Inter', sans-serif;
      background: #f0f4f8;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
    }

    .container {
      background: #ffffff;
      padding: 30px;
      max-width: 500px;
      width: 100%;
      border-radius: 12px;
      box-shadow: 0 8px 20px rgba(0,0,0,0.08);
    }

    h1 {
      text-align: center;
      color: #2c3e50;
      margin-bottom: 30px;
      font-size: 24px;
    }

    label {
      display: block;
      margin-bottom: 6px;
      font-weight: 600;
      color: #34495e;
    }

    select, input[type="time"] {
      width: 100%;
      padding: 10px;
      margin-bottom: 20px;
      border: 1px solid #ccc;
      border-radius: 8px;
      font-size: 16px;
    }

    button {
      width: 100%;
      padding: 12px;
      font-size: 16px;
      background-color: #0077cc;
      color: white;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: background 0.3s ease;
    }

    button:hover {
      background-color: #005fa3;
    }

    #resultado {
      margin-top: 20px;
      background: #ecf6ff;
      padding: 15px;
      border-left: 5px solid #0077cc;
      border-radius: 8px;
      font-size: 16px;
      color: #2c3e50;
      white-space: pre-line;
    }

    @media (max-width: 600px) {
      .container {
        padding: 20px;
      }

      h1 {
        font-size: 20px;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Comparador de Horarios</h1>

    <label for="ciudadOrigen">Ciudad de origen</label>
    <select id="ciudadOrigen"></select>

    <label for="hora">Hora en ciudad de origen</label>
    <input type="time" id="hora" required>

    <label for="ciudadDestino">Ciudad de destino</label>
    <select id="ciudadDestino"></select>

    <button onclick="compararHorarios()">Comparar</button>

    <div id="resultado"></div>
  </div>

  <script>
    // Ciudades con zona y offset estándar (sin horario de verano)
    const ciudades = [
      { nombre: "Buenos Aires", zona: "America/Argentina/Buenos_Aires", gmt: -3 },
      { nombre: "Ciudad de México", zona: "America/Mexico_City", gmt: -6 },
      { nombre: "Madrid", zona: "Europe/Madrid", gmt: +1 },
      { nombre: "Nueva York", zona: "America/New_York", gmt: -5 },
      { nombre: "Londres", zona: "Europe/London", gmt: 0 },
      { nombre: "Tokio", zona: "Asia/Tokyo", gmt: +9 },
      { nombre: "Santiago de Chile", zona: "America/Santiago", gmt: -4 },
      { nombre: "San Pablo", zona: "America/Sao_Paulo", gmt: -3 },
      { nombre: "Los Ángeles", zona: "America/Los_Angeles", gmt: -8 },
      { nombre: "París", zona: "Europe/Paris", gmt: +1 },
      { nombre: "Sydney", zona: "Australia/Sydney", gmt: +10 },
      { nombre: "Johannesburgo", zona: "Africa/Johannesburg", gmt: +2 },
      { nombre: "El Cairo", zona: "Africa/Cairo", gmt: +2 },
      { nombre: "Moscú", zona: "Europe/Moscow", gmt: +3 },
      { nombre: "Dubai", zona: "Asia/Dubai", gmt: +4 }
    ];

    function formatoGMT(offset) {
      return `GMT${offset >= 0 ? "+" : ""}${offset}`;
    }

    const origenSelect = document.getElementById("ciudadOrigen");
    const destinoSelect = document.getElementById("ciudadDestino");

    ciudades.forEach(c => {
      const optionOrigen = document.createElement("option");
      optionOrigen.value = c.zona;
      optionOrigen.textContent = `${c.nombre} (${formatoGMT(c.gmt)})`;
      origenSelect.appendChild(optionOrigen);

      const optionDestino = document.createElement("option");
      optionDestino.value = c.zona;
      optionDestino.textContent = `${c.nombre} (${formatoGMT(c.gmt)})`;
      destinoSelect.appendChild(optionDestino);
    });

    // Opcional: valores por defecto
    origenSelect.value = "America/Argentina/Buenos_Aires";
    destinoSelect.value = "Europe/Madrid";

    async function obtenerOffset(ciudad) {
      const response = await fetch(`https://worldtimeapi.org/api/timezone/${ciudad}`);
      const data = await response.json();
      return data.utc_offset; // ej: "+03:00"
    }

    function parseHora(horaStr) {
      const [h, m] = horaStr.split(":").map(Number);
      return { horas: h, minutos: m };
    }

    async function compararHorarios() {
      const ciudadOrigen = origenSelect.value;
      const ciudadDestino = destinoSelect.value;
      const horaSeleccionada = document.getElementById("hora").value;

      if (!horaSeleccionada) {
        document.getElementById("resultado").innerText = "Por favor, seleccioná una hora.";
        return;
      }

      const offsetOrigen = await obtenerOffset(ciudadOrigen);
      const offsetDestino = await obtenerOffset(ciudadDestino);

      const { horas, minutos } = parseHora(horaSeleccionada);

      // Convertir offsets a minutos
      const minutosOffsetOrigen = parseInt(offsetOrigen.slice(1, 3)) * 60 + parseInt(offsetOrigen.slice(4, 6));
      const minutosOffsetDestino = parseInt(offsetDestino.slice(1, 3)) * 60 + parseInt(offsetDestino.slice(4, 6));

      // Calcular diferencia considerando signo
      const signoOrigen = offsetOrigen[0] === "-" ? -1 : 1;
      const signoDestino = offsetDestino[0] === "-" ? -1 : 1;
      const diferencia = (signoDestino * minutosOffsetDestino) - (signoOrigen * minutosOffsetOrigen);

      const totalMinutos = horas * 60 + minutos + diferencia;

      // Manejar ajuste si pasa del día (0-1439)
      const minutosDia = 24 * 60;
      let minutosAjustados = ((totalMinutos % minutosDia) + minutosDia) % minutosDia;

      const hDest = Math.floor(minutosAjustados / 60).toString().padStart(2, '0');
      const mDest = (minutosAjustados % 60).toString().padStart(2, '0');

      const ciudadOrigenNombre = origenSelect.selectedOptions[0].textContent;
      const ciudadDestinoNombre = destinoSelect.selectedOptions[0].textContent;

      document.getElementById("resultado").innerText =
        `🕒 Cuando en ${ciudadOrigenNombre} son las ${horaSeleccionada},\nen ${ciudadDestinoNombre} son las ${hDest}:${mDest}.`;
    }
  </script>
</body>
</html>

